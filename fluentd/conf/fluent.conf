# determine the input sources; where all the data come from
<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

# determine the output destinations; Tell fluentd what to do!
# Match all events whatever their tags
<match app.**>
  @type copy
  # store in ES
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200
    logstash_format true
    logstash_prefix logs-${tag}
    logstash_dateformat %Y%m%d
    tag_key @component # the name of the key that will have the tag on the docker app as value
    include_tag_key true # include the flunetd tag key as field in the event
    type_name component_log # value of the _type field on the event
    flush_interval 1s
  </store>

  # store in the fluentd sdout
  <store>
    @type stdout
  </store>
  # ... can add store into s3 etc..
</match>


